attack_technique: T1083
display_name: File and Directory Discovery
atomic_tests:
    - name: File and Directory Discovery (cmd.exe)
      item_id: T1083-1
      auto_generated_guid: 0e36303b-6762-4500-b003-127743b80ba6
      description: |
        Find or discover files on the file system.  Upon successful execution, this test will output the results of all the data discovery commands to a specified file.
      supported_platforms:
        - windows
      input_arguments:
        output_file:
            description: File to output results to
            type: string
            default: '%temp%\T1083Test1.txt'
      dependency_executor_name: ""
      dependencies: []
      executor:
        command: |
            dir /s c:\ >> #{output_file}
            dir /s "c:\Documents and Settings" >> #{output_file}
            dir /s "c:\Program Files\" >> #{output_file}
            dir "%systemdrive%\Users\*.*" >> #{output_file}
            dir "%userprofile%\AppData\Roaming\Microsoft\Windows\Recent\*.*" >> #{output_file}
            dir "%userprofile%\Desktop\*.*" >> #{output_file}
            tree /F >> #{output_file}
        cleanup_command: |
            del #{output_file}
        name: command_prompt
        elevation_required: false
    - name: File and Directory Discovery (PowerShell)
      item_id: T1083-2
      auto_generated_guid: 2158908e-b7ef-4c21-8a83-3ce4dd05a924
      description: |
        Find or discover files on the file system. Upon execution, file and folder information will be displayed.
      supported_platforms:
        - windows
      input_arguments: {}
      dependency_executor_name: ""
      dependencies: []
      executor:
        command: |
            ls -recurse
            get-childitem -recurse
            gci -recurse
        cleanup_command: ""
        name: powershell
        elevation_required: false
    - name: Nix File and Directory Discovery
      item_id: T1083-3
      auto_generated_guid: ffc8b249-372a-4b74-adcd-e4c0430842de
      description: |
        Find or discover files on the file system

        References:

        http://osxdaily.com/2013/01/29/list-all-files-subdirectory-contents-recursively/

        https://perishablepress.com/list-files-folders-recursively-terminal/
      supported_platforms:
        - macos
        - linux
      input_arguments:
        output_file:
            description: Output file used to store the results.
            type: path
            default: /tmp/AtomicPathFolder/program/T1083.txt
      dependency_executor_name: ""
      dependencies: []
      executor:
        command: |
            ls -a >> #{output_file}
            if [ -d /Library/Preferences/ ]; then ls -la /Library/Preferences/ > #{output_file}; fi;
            file */* *>> #{output_file}
            cat #{output_file} 2>/dev/null
            find . -type f
            ls -R | grep ":$" | sed -e 's/:$//' -e 's/[^-][^\/]*\//--/g' -e 's/^/ /' -e 's/-/|/'
            locate *
            which sh
        cleanup_command: |
            rm #{output_file}
        name: sh
        elevation_required: false
    - name: Nix File and Directory Discovery 2
      item_id: T1083-4
      auto_generated_guid: 13c5e1ae-605b-46c4-a79f-db28c77ff24e
      description: |
        Find or discover files on the file system
      supported_platforms:
        - macos
        - linux
      input_arguments:
        output_file:
            description: Output file used to store the results.
            type: path
            default: /tmp/AtomicPathFolder/program/T1083.txt
      dependency_executor_name: ""
      dependencies: []
      executor:
        command: |
            cd $HOME && find . -print | sed -e 's;[^/]*/;|__;g;s;__|; |;g' > #{output_file}
            if [ -f /etc/mtab ]; then cat /etc/mtab >> #{output_file}; fi;
            find . -type f -iname *.pdf >> #{output_file}
            cat #{output_file}
            find . -type f -name ".*"
        cleanup_command: 'rm #{output_file}'
        name: sh
        elevation_required: false
    - name: Simulating MAZE Directory Enumeration
      item_id: T1083-5
      auto_generated_guid: c6c34f61-1c3e-40fb-8a58-d017d88286d8
      description: "This test emulates MAZE ransomware's ability to enumerate directories using Powershell. \nUpon successful execution, this test will output the directory enumeration results to a specified file, as well as display them in the active window. \nSee https://www.mandiant.com/resources/tactics-techniques-procedures-associated-with-maze-ransomware-incidents\n"
      supported_platforms:
        - windows
      input_arguments:
        File_to_output:
            description: File to output results to
            type: string
            default: $env:temp\T1083Test5.txt
      dependency_executor_name: ""
      dependencies: []
      executor:
        command: "$folderarray = @(\"Desktop\", \"Downloads\", \"Documents\", \"AppData/Local\", \"AppData/Roaming\")\nGet-ChildItem -Path $env:homedrive -ErrorAction SilentlyContinue | Out-File -append #{File_to_output}\nGet-ChildItem -Path $env:programfiles -erroraction silentlycontinue | Out-File -append #{File_to_output}\nGet-ChildItem -Path \"${env:ProgramFiles(x86)}\" -erroraction silentlycontinue | Out-File -append #{File_to_output}\n$UsersFolder = \"$env:homedrive\\Users\\\"\nforeach ($directory in Get-ChildItem -Path $UsersFolder -ErrorAction SilentlyContinue) \n{\nforeach ($secondarydirectory in $folderarray)\n {Get-ChildItem -Path \"$UsersFolder/$directory/$secondarydirectory\" -ErrorAction SilentlyContinue | Out-File -append #{File_to_output}}\n}\ncat #{File_to_output}\n"
        cleanup_command: |
            remove-item #{File_to_output} -ErrorAction SilentlyContinue
        name: powershell
        elevation_required: false
    - name: Launch DirLister Executable
      item_id: T1083-6
      auto_generated_guid: c5bec457-43c9-4a18-9a24-fe151d8971b7
      description: |-
        Launches the DirLister executable for a short period of time and then exits.

        Recently seen used by [BlackCat ransomware](https://news.sophos.com/en-us/2022/07/14/blackcat-ransomware-attacks-not-merely-a-byproduct-of-bad-luck/) to create a list of accessible directories and files.
      supported_platforms:
        - windows
      input_arguments:
        dirlister_path:
            description: 'Path to the DirLister executable '
            type: string
            default: PathToAtomicsFolder\T1083\bin\DirLister.exe
      dependency_executor_name: powershell
      dependencies:
        - description: |
            DirLister.exe must exist in the specified path #{dirlister_path}
          prereq_command: |
            if (Test-Path #{dirlister_path}) {exit 0} else {exit 1}
          get_prereq_command: |
            $parentpath = Split-Path "#{dirlister_path}"
            Invoke-WebRequest https://github.com/SanderSade/DirLister/releases/download/v2.beta4/DirLister.v2.beta4.zip -OutFile $env:TEMP\TDirLister.v2.beta4.zip
            New-Item -ItemType Directory -Force -Path $parentpath | Out-Null
            Expand-Archive -Path $env:TEMP\TDirLister.v2.beta4.zip -DestinationPath $env:TEMP\TDirLister.v2.beta4 -Force
            Copy-Item $env:TEMP\TDirLister.v2.beta4\* $parentpath -Recurse
            Remove-Item $env:TEMP\TDirLister.v2.beta4.zip,$env:TEMP\TDirLister.v2.beta4 -Recurse -ErrorAction Ignore
      executor:
        command: |
            Start-Process #{dirlister_path}
            Start-Sleep -Second 4
            Stop-Process -Name "DirLister"
        cleanup_command: ""
        name: powershell
        elevation_required: false
